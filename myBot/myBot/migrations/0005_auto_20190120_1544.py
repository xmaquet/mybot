# Generated by Django 2.1.4 on 2019-01-20 14:44

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('myBot', '0004_auto_20190120_1529'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='serial',
            name='timeout',
        ),
        migrations.AddField(
            model_name='serial',
            name='dsrdtr',
            field=models.BooleanField(default=False, verbose_name='DSR/DTR : enable hardware flow control'),
        ),
        migrations.AddField(
            model_name='serial',
            name='exclusive',
            field=models.CharField(default='None', help_text='Set exclusive access mode (POSIX only). A port cannot be opened in exclusive access mode if it is already open in exclusive access mode', max_length=20),
        ),
        migrations.AddField(
            model_name='serial',
            name='inter_byte_timeout',
            field=models.CharField(default='None', help_text='inter-character timeout, None for disable(default)', max_length=20),
        ),
        migrations.AddField(
            model_name='serial',
            name='rtscts',
            field=models.BooleanField(default=False, verbose_name='RTS/CTS : enable hardware flow control'),
        ),
        migrations.AddField(
            model_name='serial',
            name='write_timeout',
            field=models.CharField(default='None', help_text='None : on attend sans limite jusquà la réception du nb de bytes / 0 : mode non bloquant / x : valeur en secondes sauf si tous les bytes sont reçus', max_length=20),
        ),
        migrations.AlterField(
            model_name='serial',
            name='xonxoff',
            field=models.BooleanField(default=False, verbose_name='xonxoff : enable software flow control'),
        ),
    ]
